SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Entwicklung\Casio\SDK\Minesweeper\Digits.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Digits.c     1    #include "Digits.h"
        Digits.c     2    #include "fxlib.h"
        Digits.c     3    
        Digits.c     4    uchar digitNULL[] = 
        Digits.c     5    {
        Digits.c     6        0, 1, 1, 1, 1, 1, 1, 0,
        Digits.c     7        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c     8        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c     9        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c    10        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c    11        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c    12        0, 1, 0, 0, 0, 0, 1, 0,
        Digits.c    13        0, 1, 1, 1, 1, 1, 1, 0
        Digits.c    14    };
        Digits.c    15    
        Digits.c    16    uchar digit0[] = 
        Digits.c    17    {
        Digits.c    18        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    19        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    20        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    21        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    22        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    23        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    24        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    25        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c    26    };
        Digits.c    27    
        Digits.c    28    uchar digit1[] = 
        Digits.c    29    {
        Digits.c    30        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    31        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c    32        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    33        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c    34        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c    35        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c    36        0, 0, 0, 1, 1, 1, 0, 0,
        Digits.c    37        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c    38    };
        Digits.c    39    
        Digits.c    40    uchar digit2[] = 
        Digits.c    41    {
        Digits.c    42        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    43        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    44        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    45        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c    46        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    47        0, 0, 1, 0, 0, 0, 0, 0,
        Digits.c    48        0, 0, 1, 1, 1, 1, 0, 0,
        Digits.c    49        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c    50    };
        Digits.c    51    
        Digits.c    52    uchar digit3[] = 
        Digits.c    53    {
        Digits.c    54        0, 0, 0, 0, 0, 0, 0, 0,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Digits.c    55        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    56        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    57        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c    58        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    59        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c    60        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    61        0, 0, 0, 1, 1, 0, 0, 0
        Digits.c    62    };
        Digits.c    63    
        Digits.c    64    uchar digit4[] = 
        Digits.c    65    {
        Digits.c    66        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    67        0, 0, 1, 0, 0, 0, 0, 0,
        Digits.c    68        0, 0, 1, 0, 0, 0, 0, 0,
        Digits.c    69        0, 0, 1, 0, 1, 0, 0, 0,
        Digits.c    70        0, 0, 1, 0, 1, 0, 0, 0,
        Digits.c    71        0, 0, 1, 1, 1, 1, 0, 0,
        Digits.c    72        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c    73        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    74    };
        Digits.c    75    
        Digits.c    76    uchar digit5[] =
        Digits.c    77    {
        Digits.c    78        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    79        0, 0, 1, 1, 1, 1, 0, 0,
        Digits.c    80        0, 0, 1, 0, 0, 0, 0, 0,
        Digits.c    81        0, 0, 1, 1, 1, 0, 0, 0,
        Digits.c    82        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c    83        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c    84        0, 0, 1, 1, 1, 0, 0, 0,
        Digits.c    85        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c    86    };
        Digits.c    87    
        Digits.c    88    uchar digit6[] = 
        Digits.c    89    {
        Digits.c    90        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c    91        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c    92        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    93        0, 0, 1, 0, 0, 0, 0, 0,
        Digits.c    94        0, 0, 1, 1, 1, 0, 0, 0,
        Digits.c    95        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    96        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c    97        0, 0, 0, 1, 1, 0, 0, 0
        Digits.c    98    };
        Digits.c    99    
        Digits.c   100    uchar digit7[] = 
        Digits.c   101    {
        Digits.c   102        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c   103        0, 0, 1, 1, 1, 1, 0, 0,
        Digits.c   104        0, 0, 0, 0, 0, 1, 0, 0,
        Digits.c   105        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   106        0, 0, 0, 1, 1, 1, 0, 0,
        Digits.c   107        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   108        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   109        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c   110    };
        Digits.c   111    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Digits.c   112    uchar digit8[] =
        Digits.c   113    {
        Digits.c   114        0, 0, 0, 0, 0, 0, 0, 0,
        Digits.c   115        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   116        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c   117        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c   118        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   119        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c   120        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c   121        0, 0, 0, 1, 1, 0, 0, 0
        Digits.c   122    };
        Digits.c   123    
        Digits.c   124    uchar iconFlag[] = 
        Digits.c   125    {
        Digits.c   126        1, 0, 1, 0, 1, 0, 1, 0,
        Digits.c   127        0, 1, 0, 1, 1, 0, 0, 1,
        Digits.c   128        1, 0, 1, 1, 1, 0, 1, 0,
        Digits.c   129        0, 1, 0, 1, 1, 0, 0, 1,
        Digits.c   130        1, 0, 1, 0, 1, 0, 1, 0,
        Digits.c   131        0, 1, 0, 0, 1, 0, 0, 1,
        Digits.c   132        1, 0, 1, 1, 1, 1, 1, 0,
        Digits.c   133        0, 1, 0, 1, 0, 1, 0, 1
        Digits.c   134    };
        Digits.c   135    
        Digits.c   136    uchar iconMine[] = 
        Digits.c   137    {
        Digits.c   138        0, 0, 1, 0, 0, 1, 0, 0,
        Digits.c   139        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   140        1, 0, 1, 1, 1, 1, 0, 1,
        Digits.c   141        0, 1, 1, 1, 1, 1, 1, 0,
        Digits.c   142        0, 1, 1, 1, 1, 1, 1, 0,
        Digits.c   143        1, 0, 1, 1, 1, 1, 0, 1,
        Digits.c   144        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   145        0, 0, 1, 0, 0, 1, 0, 0
        Digits.c   146    };
        Digits.c   147    
        Digits.c   148    uchar iconFlag2[] = 
        Digits.c   149    {
        Digits.c   150        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   151        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   152        0, 0, 1, 1, 1, 0, 0, 0,
        Digits.c   153        0, 0, 0, 1, 1, 0, 0, 0,
        Digits.c   154        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   155        0, 0, 0, 0, 1, 0, 0, 0,
        Digits.c   156        0, 0, 1, 1, 1, 1, 1, 0,
        Digits.c   157        0, 0, 0, 0, 0, 0, 0, 0
        Digits.c   158    };
        Digits.c   159    
        Digits.c   160    uchar *GetDigit(int ind)
P   00000000              _GetDigit:                       ; function: GetDigit
                                                           ; frame size=0
        Digits.c   161    {
        Digits.c   162        switch(ind)
    00000000 6043                   MOV         R4,R0
    00000002 8800                   CMP/EQ      #0,R0
    00000004 8917                   BT          L323
    00000006 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000008 8918                   BT          L324
    0000000A 8802                   CMP/EQ      #2,R0
    0000000C 8919                   BT          L325
    0000000E 8803                   CMP/EQ      #3,R0
    00000010 891A                   BT          L326
    00000012 8804                   CMP/EQ      #4,R0
    00000014 891B                   BT          L327
    00000016 8805                   CMP/EQ      #5,R0
    00000018 891C                   BT          L328
    0000001A 8806                   CMP/EQ      #6,R0
    0000001C 891D                   BT          L329
    0000001E 8807                   CMP/EQ      #7,R0
    00000020 891E                   BT          L330
    00000022 8808                   CMP/EQ      #8,R0
    00000024 891F                   BT          L331
    00000026 880A                   CMP/EQ      #10,R0
    00000028 8920                   BT          L332
    0000002A 880B                   CMP/EQ      #11,R0
    0000002C 8921                   BT          L333
    0000002E 880C                   CMP/EQ      #12,R0
    00000030 8922                   BT          L334
    00000032 A024                   BRA         L335
    00000034 0009                   NOP
    00000036              L323:                            ; case label 
        Digits.c   163        {
        Digits.c   164            case 0: return digit0;
    00000036 D02B                   MOV.L       L342,R0    ; _digit0
    00000038 000B                   RTS
    0000003A 0009                   NOP
    0000003C              L324:                            ; case label 
        Digits.c   165            case 1: return digit1;
    0000003C D02A                   MOV.L       L342+4,R0  ; _digit1
    0000003E 000B                   RTS
    00000040 0009                   NOP
    00000042              L325:                            ; case label 
        Digits.c   166            case 2: return digit2;
    00000042 D02A                   MOV.L       L342+8,R0  ; _digit2
    00000044 000B                   RTS
    00000046 0009                   NOP
    00000048              L326:                            ; case label 
        Digits.c   167            case 3: return digit3;
    00000048 D029                   MOV.L       L342+12,R0 ; _digit3
    0000004A 000B                   RTS
    0000004C 0009                   NOP
    0000004E              L327:                            ; case label 
        Digits.c   168            case 4: return digit4;
    0000004E D029                   MOV.L       L342+16,R0 ; _digit4
    00000050 000B                   RTS
    00000052 0009                   NOP
    00000054              L328:                            ; case label 
        Digits.c   169            case 5: return digit5;
    00000054 D028                   MOV.L       L342+20,R0 ; _digit5
    00000056 000B                   RTS
    00000058 0009                   NOP
    0000005A              L329:                            ; case label 
        Digits.c   170            case 6: return digit6;
    0000005A D028                   MOV.L       L342+24,R0 ; _digit6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000005C 000B                   RTS
    0000005E 0009                   NOP
    00000060              L330:                            ; case label 
        Digits.c   171            case 7: return digit7;
    00000060 D027                   MOV.L       L342+28,R0 ; _digit7
    00000062 000B                   RTS
    00000064 0009                   NOP
    00000066              L331:                            ; case label 
        Digits.c   172            case 8: return digit8;
    00000066 D027                   MOV.L       L342+32,R0 ; _digit8
    00000068 000B                   RTS
    0000006A 0009                   NOP
    0000006C              L332:                            ; case label 
        Digits.c   173            case ICON_FLAG: return iconFlag;
    0000006C D026                   MOV.L       L342+36,R0 ; _iconFlag
    0000006E 000B                   RTS
    00000070 0009                   NOP
    00000072              L333:                            ; case label 
        Digits.c   174            case ICON_MINE: return iconMine;
    00000072 D026                   MOV.L       L342+40,R0 ; _iconMine
    00000074 000B                   RTS
    00000076 0009                   NOP
    00000078              L334:                            ; case label 
        Digits.c   175            case ICON_FLAG2: return iconFlag2;
    00000078 D025                   MOV.L       L342+44,R0 ; _iconFlag2
    0000007A 000B                   RTS
    0000007C 0009                   NOP
    0000007E              L335:                             
        Digits.c   176        }
        Digits.c   177        return digitNULL;
    0000007E D025                   MOV.L       L342+48,R0 ; _digitNULL
        Digits.c   178    }
    00000080              L336:                             
    00000080 000B                   RTS
    00000082 0009                   NOP
        Digits.c   179    
        Digits.c   180    void DrawDigit(int x, int y, uchar *digit)
    00000084              _DrawDigit:                      ; function: DrawDigit
                                                           ; frame size=28
    00000084 2FE6                   MOV.L       R14,@-R15
        Digits.c   181    {
        Digits.c   182        int i, _x, _y;
        Digits.c   183        for(i = 0; i < 64; i++)
    00000086 EE00                   MOV         #0,R14
    00000088 2FD6                   MOV.L       R13,@-R15
    0000008A ED40                   MOV         #64,R13
    0000008C 2FC6                   MOV.L       R12,@-R15
    0000008E 4F22                   STS.L       PR,@-R15
    00000090 DC21                   MOV.L       L342+52,R12; _Bdisp_SetPoint_DDVRAM
    00000092 7FF4                   ADD         #-12,R15
    00000094 1F42                   MOV.L       R4,@(8,R15)
    00000096 2F52                   MOV.L       R5,@R15
    00000098 1F61                   MOV.L       R6,@(4,R15)
    0000009A              L337:                             
        Digits.c   184        {
        Digits.c   185            _x = x + i % 8;
    0000009A 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009C 4011                   CMP/PZ      R0
    0000009E 8B01                   BF          L338
    000000A0 A005                   BRA         L339
    000000A2 C907                   AND         #7,R0
    000000A4              L338:                             
    000000A4 6007                   NOT         R0,R0
    000000A6 7001                   ADD         #1,R0
    000000A8 C907                   AND         #7,R0
    000000AA 6007                   NOT         R0,R0
    000000AC 7001                   ADD         #1,R0
    000000AE              L339:                             
        Digits.c   186            _y = y + i / 8;
    000000AE 65E3                   MOV         R14,R5
    000000B0 54F2                   MOV.L       @(8,R15),R4
    000000B2 4511                   CMP/PZ      R5
    000000B4 8D01                   BT/S        L340
    000000B6 340C                   ADD         R0,R4
    000000B8 7507                   ADD         #7,R5
    000000BA              L340:                             
    000000BA 4521                   SHAR        R5
    000000BC 62F2                   MOV.L       @R15,R2
    000000BE 4521                   SHAR        R5
        Digits.c   187            if(digit[i])
    000000C0 50F1                   MOV.L       @(4,R15),R0
    000000C2 4521                   SHAR        R5
    000000C4 03EC                   MOV.B       @(R0,R14),R3
    000000C6 633C                   EXTU.B      R3,R3
    000000C8 2338                   TST         R3,R3
    000000CA 8D02                   BT/S        L341
    000000CC 352C                   ADD         R2,R5
        Digits.c   188                Bdisp_SetPoint_DDVRAM(_x, _y, 1);
    000000CE 4C0B                   JSR         @R12
    000000D0 E601                   MOV         #1,R6
    000000D2              L341:                             
    000000D2 7E01                   ADD         #1,R14
    000000D4 3ED3                   CMP/GE      R13,R14
    000000D6 8BE0                   BF          L337
        Digits.c   189        }
        Digits.c   190    }
    000000D8 7F0C                   ADD         #12,R15
    000000DA 4F26                   LDS.L       @R15+,PR
    000000DC 6CF6                   MOV.L       @R15+,R12
    000000DE 6DF6                   MOV.L       @R15+,R13
    000000E0 000B                   RTS
    000000E2 6EF6                   MOV.L       @R15+,R14
    000000E4              L342:                             
    000000E4 <00000000>             .DATA.L     _digit0
    000000E8 <00000000>             .DATA.L     _digit1
    000000EC <00000000>             .DATA.L     _digit2
    000000F0 <00000000>             .DATA.L     _digit3
    000000F4 <00000000>             .DATA.L     _digit4
    000000F8 <00000000>             .DATA.L     _digit5
    000000FC <00000000>             .DATA.L     _digit6
    00000100 <00000000>             .DATA.L     _digit7
    00000104 <00000000>             .DATA.L     _digit8
    00000108 <00000000>             .DATA.L     _iconFlag
    0000010C <00000000>             .DATA.L     _iconMine




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000110 <00000000>             .DATA.L     _iconFlag2
    00000114 <00000000>             .DATA.L     _digitNULL
    00000118 <00000000>             .DATA.L     _Bdisp_SetPoint_DDVRAM
D   00000000              _digitNULL:                      ; static: digitNULL
    00000000 0001010101             .DATA.B     H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,
             0101000001 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000001 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,
             0000010000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00
             0000010000   
             0100000000   
             0100000100   
             0000000100   
             0001000000   
             0001000001   
             0000000001   
             0000010101   
             01010100     
    00000040              _digit0:                         ; static: digit0
    00000040 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,
             0001010000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0001000000   
             0001000001   
             0000000001   
             0000010000   
             0000010000   
             0100000000   
             0001010000   
             0000000000   
             00000000     
    00000080              _digit1:                         ; static: digit1
    00000080 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0100000000   
             0000000100   
             0000000000   
             0001000000   
             0000000001   
             0000000000   
             0001010100   
             0000000000   
             00000000     
    000000C0              _digit2:                         ; static: digit2
    000000C0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0001000000   
             0000000001   
             0000000000   
             0101000000   
             0000010000   
             0000000000   
             0101010100   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             00000000     
    00000100              _digit3:                         ; static: digit3
    00000100 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00
             0001000000   
             0000000001   
             0000000000   
             0101000000   
             0000000000   
             0100000000   
             0100000100   
             0000000001   
             01000000     
    00000140              _digit4:                         ; static: digit4
    00000140 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0001000100   
             0000000001   
             0001000000   
             0000010101   
             0100000000   
             0000010000   
             0000000000   
             00000000     
    00000180              _digit5:                         ; static: digit5
    00000180 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0001010100   
             0000000000   
             0000010000   
             0000000000   
             0100000000   
             0101010000   
             0000000000   
             00000000     
    000001C0              _digit6:                         ; static: digit6
    000001C0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00
             0001000000   
             0001000000   
             0000000001   
             0101000000   
             0000010000   
             0100000000   
             0100000100   
             0000000001   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             01000000     
    00000200              _digit7:                         ; static: digit7
    00000200 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0001000000   
             0000000100   
             0000000000   
             0101010000   
             0000000001   
             0000000000   
             0000010000   
             0000000000   
             00000000     
    00000240              _digit8:                         ; static: digit8
    00000240 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00
             0001000000   
             0001000001   
             0000000000   
             0101000000   
             0000010000   
             0100000000   
             0100000100   
             0000000001   
             01000000     
    00000280              _iconFlag:                       ; static: iconFlag
    00000280 0100010001             .DATA.B     H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'01,H'00,H'00,H'01,
             0001000001 +                       H'01,H'00,H'01,H'01,H'01,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'01,H'00,H'00,H'01,
             0001010000 +                       H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'01,
             0101000101 +                       H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'01
             0100010000   
             0100010100   
             0001010001   
             0001000100   
             0001000001   
             0000010100   
             0101010101   
             0000010001   
             00010001     
    000002C0              _iconMine:                       ; static: iconMine
    000002C0 0000010000             .DATA.B     H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0100000000 +                       H'01,H'00,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0001010000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'00,H'01,
             0001000101 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00
             0101000100   
             0101010101   
             0100000101   
             0101010100   
             0100010101   
             0100010000   
             0001010000   
             0000000100   
             00010000     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000300              _iconFlag2:                      ; static: iconFlag2
    00000300 0000000001             .DATA.B     H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0100000000   
             0000010100   
             0000000000   
             0001000000   
             0000000001   
             0000000000   
             0101010101   
             0000000000   
             00000000     















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Dec-2020 02:46:36  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      190



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000011C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000340 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000045C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            1
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          15
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            36






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\milky\LOCALS~1\Temp\hmk3E0.tmp 

