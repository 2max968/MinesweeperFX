SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Entwicklung\Casio\SDK\Minesweeper\Graphics.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Graphics.c     1    #include "Graphics.h"
      Graphics.c     2    #include "fxlib.h"
      Graphics.c     3    
      Graphics.c     4    void DrawRect(int x, int y, int w, int h)
P   00000000              _DrawRect:                       ; function: DrawRect
                                                           ; frame size=36
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
      Graphics.c     5    {
      Graphics.c     6        int i;
      Graphics.c     7    
      Graphics.c     8        for(i = 0; i < w; i++)
    00000006 EC00                   MOV         #0,R12
    00000008 DE4D                   MOV.L       L346+4,R14 ; _Bdisp_SetPoint_VRAM
    0000000A 2FB6                   MOV.L       R11,@-R15
    0000000C 2FA6                   MOV.L       R10,@-R15
    0000000E 6B43                   MOV         R4,R11
    00000010 2F96                   MOV.L       R9,@-R15
    00000012 6A53                   MOV         R5,R10
    00000014 2F86                   MOV.L       R8,@-R15
    00000016 6963                   MOV         R6,R9
    00000018 4F22                   STS.L       PR,@-R15
    0000001A 6DB3                   MOV         R11,R13
    0000001C 7FFC                   ADD         #-4,R15
    0000001E 6873                   MOV         R7,R8
    00000020 2F72                   MOV.L       R7,@R15
    00000022 4915                   CMP/PL      R9
    00000024 38AC                   ADD         R10,R8
    00000026 8F0C                   BF/S        L329
    00000028 78FF                   ADD         #-1,R8
    0000002A              L330:                             
      Graphics.c     9        {
      Graphics.c    10            Bdisp_SetPoint_VRAM(x + i, y, 1);
    0000002A E601                   MOV         #1,R6
    0000002C 65A3                   MOV         R10,R5
    0000002E 4E0B                   JSR         @R14
    00000030 64D3                   MOV         R13,R4
      Graphics.c    11            Bdisp_SetPoint_VRAM(x + i, y + h - 1, 1);
    00000032 E601                   MOV         #1,R6
    00000034 6583                   MOV         R8,R5
    00000036 4E0B                   JSR         @R14
    00000038 64D3                   MOV         R13,R4
    0000003A 7C01                   ADD         #1,R12
    0000003C 3C93                   CMP/GE      R9,R12
    0000003E 8FF4                   BF/S        L330
    00000040 7D01                   ADD         #1,R13
    00000042              L329:                             
      Graphics.c    12        }
      Graphics.c    13        for(i = 1; i < h - 1; i++)
    00000042 EC01                   MOV         #1,R12
    00000044 6DA3                   MOV         R10,R13
    00000046 7D01                   ADD         #1,R13
    00000048 6AF2                   MOV.L       @R15,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000004A 39BC                   ADD         R11,R9
    0000004C 7AFF                   ADD         #-1,R10
    0000004E 3CA3                   CMP/GE      R10,R12
    00000050 8D0C                   BT/S        L331
    00000052 79FF                   ADD         #-1,R9
    00000054              L332:                             
      Graphics.c    14        {
      Graphics.c    15            Bdisp_SetPoint_VRAM(x, y + i, 1);
    00000054 E601                   MOV         #1,R6
    00000056 65D3                   MOV         R13,R5
    00000058 4E0B                   JSR         @R14
    0000005A 64B3                   MOV         R11,R4
      Graphics.c    16            Bdisp_SetPoint_VRAM(x + w - 1, y + i, 1);
    0000005C E601                   MOV         #1,R6
    0000005E 65D3                   MOV         R13,R5
    00000060 4E0B                   JSR         @R14
    00000062 6493                   MOV         R9,R4
    00000064 7C01                   ADD         #1,R12
    00000066 3CA3                   CMP/GE      R10,R12
    00000068 8FF4                   BF/S        L332
    0000006A 7D01                   ADD         #1,R13
    0000006C              L331:                             
      Graphics.c    17        }
      Graphics.c    18    }
    0000006C 7F04                   ADD         #4,R15
    0000006E 4F26                   LDS.L       @R15+,PR
    00000070 68F6                   MOV.L       @R15+,R8
    00000072 69F6                   MOV.L       @R15+,R9
    00000074 6AF6                   MOV.L       @R15+,R10
    00000076 6BF6                   MOV.L       @R15+,R11
    00000078 6CF6                   MOV.L       @R15+,R12
    0000007A 6DF6                   MOV.L       @R15+,R13
    0000007C 000B                   RTS
    0000007E 6EF6                   MOV.L       @R15+,R14
      Graphics.c    19    
      Graphics.c    20    void SetPoint(int x, int y)
    00000080              _SetPoint:                       ; function: SetPoint
                                                           ; frame size=0
      Graphics.c    21    {
      Graphics.c    22        Bdisp_SetPoint_VRAM(x, y, 1);
    00000080 D32F                   MOV.L       L346+4,R3  ; _Bdisp_SetPoint_VRAM
    00000082 432B                   JMP         @R3
    00000084 E601                   MOV         #1,R6
      Graphics.c    23    }
      Graphics.c    24    
      Graphics.c    25    void Clear()
    00000086              _Clear:                          ; function: Clear
                                                           ; frame size=0
      Graphics.c    26    {
      Graphics.c    27        Bdisp_AllClr_DDVRAM();
    00000086 D32F                   MOV.L       L346+8,R3  ; _Bdisp_AllClr_DDVRAM
    00000088 432B                   JMP         @R3
    0000008A 0009                   NOP
      Graphics.c    28    }
      Graphics.c    29    
      Graphics.c    30    void FillRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t val)
    0000008C              _FillRect:                       ; function: FillRect




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=48
    0000008C 2FE6                   MOV.L       R14,@-R15
    0000008E 6043                   MOV         R4,R0
    00000090 2FD6                   MOV.L       R13,@-R15
    00000092 2FC6                   MOV.L       R12,@-R15
    00000094 2FB6                   MOV.L       R11,@-R15
    00000096 2FA6                   MOV.L       R10,@-R15
    00000098 2F96                   MOV.L       R9,@-R15
      Graphics.c    31    {
      Graphics.c    32        uint8_t i,j;
      Graphics.c    33        for(i = 0; i < w; i++)
    0000009A E900                   MOV         #0,R9
    0000009C 2F86                   MOV.L       R8,@-R15
    0000009E 4F22                   STS.L       PR,@-R15
    000000A0 D827                   MOV.L       L346+4,R8  ; _Bdisp_SetPoint_VRAM
    000000A2 7FF0                   ADD         #-16,R15
    000000A4 80FC                   MOV.B       R0,@(12,R15)
    000000A6 6053                   MOV         R5,R0
    000000A8 80F4                   MOV.B       R0,@(4,R15)
    000000AA 6063                   MOV         R6,R0
    000000AC 80F8                   MOV.B       R0,@(8,R15)
    000000AE 2F70                   MOV.B       R7,@R15
    000000B0 A017                   BRA         L333
    000000B2 6C93                   MOV         R9,R12
    000000B4              L334:                             
    000000B4 84F4                   MOV.B       @(4,R15),R0
    000000B6 6ACC                   EXTU.B      R12,R10
    000000B8 6BF0                   MOV.B       @R15,R11
    000000BA 600C                   EXTU.B      R0,R0
    000000BC 6E03                   MOV         R0,R14
    000000BE 6BBC                   EXTU.B      R11,R11
    000000C0 84FC                   MOV.B       @(12,R15),R0
    000000C2 4B15                   CMP/PL      R11
    000000C4 600C                   EXTU.B      R0,R0
    000000C6 3A0C                   ADD         R0,R10
    000000C8 8F0A                   BF/S        L335
      Graphics.c    34        {
      Graphics.c    35            for(j = 0; j < h; j++)
    000000CA 6D93                   MOV         R9,R13
    000000CC              L336:                             
      Graphics.c    36            {
      Graphics.c    37                Bdisp_SetPoint_VRAM(x+i,y+j,val);
    000000CC E033                   MOV         #51,R0
    000000CE 65E3                   MOV         R14,R5
    000000D0 06FC                   MOV.B       @(R0,R15),R6
    000000D2 480B                   JSR         @R8
    000000D4 64A3                   MOV         R10,R4
    000000D6 7D01                   ADD         #1,R13
    000000D8 63DC                   EXTU.B      R13,R3
    000000DA 33B3                   CMP/GE      R11,R3
    000000DC 8FF6                   BF/S        L336
    000000DE 7E01                   ADD         #1,R14
    000000E0              L335:                             
    000000E0 7C01                   ADD         #1,R12
    000000E2              L333:                             
    000000E2 63CC                   EXTU.B      R12,R3
    000000E4 84F8                   MOV.B       @(8,R15),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E6 600C                   EXTU.B      R0,R0
    000000E8 3303                   CMP/GE      R0,R3
    000000EA 8BE3                   BF          L334
      Graphics.c    38            }
      Graphics.c    39        }
      Graphics.c    40    }
    000000EC 7F10                   ADD         #16,R15
    000000EE 4F26                   LDS.L       @R15+,PR
    000000F0 68F6                   MOV.L       @R15+,R8
    000000F2 69F6                   MOV.L       @R15+,R9
    000000F4 6AF6                   MOV.L       @R15+,R10
    000000F6 6BF6                   MOV.L       @R15+,R11
    000000F8 6CF6                   MOV.L       @R15+,R12
    000000FA 6DF6                   MOV.L       @R15+,R13
    000000FC 000B                   RTS
    000000FE 6EF6                   MOV.L       @R15+,R14
      Graphics.c    41    
      Graphics.c    42    void FillDotted()
    00000100              _FillDotted:                     ; function: FillDotted
                                                           ; frame size=32
    00000100 2FE6                   MOV.L       R14,@-R15
    00000102 2FD6                   MOV.L       R13,@-R15
    00000104 2FC6                   MOV.L       R12,@-R15
    00000106 2FB6                   MOV.L       R11,@-R15
    00000108 2FA6                   MOV.L       R10,@-R15
      Graphics.c    43    {
      Graphics.c    44        int x,y;
      Graphics.c    45        for(x = 0; x < 128; x++)
    0000010A EA40                   MOV         #64,R10
    0000010C DC0C                   MOV.L       L346+4,R12 ; _Bdisp_SetPoint_VRAM
    0000010E 2F96                   MOV.L       R9,@-R15
    00000110 2F86                   MOV.L       R8,@-R15
    00000112 E900                   MOV         #0,R9
    00000114 4F22                   STS.L       PR,@-R15
    00000116 6D93                   MOV         R9,R13
    00000118 9810                   MOV.W       L346,R8    ; H'0080
    0000011A              L337:                             
    0000011A 60D3                   MOV         R13,R0
    0000011C 4011                   CMP/PZ      R0
    0000011E 8F02                   BF/S        L338
      Graphics.c    46        {
      Graphics.c    47            for(y = 0; y < 64; y++)
    00000120 6E93                   MOV         R9,R14
    00000122 A005                   BRA         L339
    00000124 C901                   AND         #1,R0
    00000126              L338:                             
    00000126 6007                   NOT         R0,R0
    00000128 7001                   ADD         #1,R0
    0000012A C901                   AND         #1,R0
    0000012C 6007                   NOT         R0,R0
    0000012E 7001                   ADD         #1,R0
    00000130              L339:                             
    00000130 6B03                   MOV         R0,R11
    00000132              L340:                             
      Graphics.c    48            {
      Graphics.c    49                if((x%2)==(y%2))
    00000132 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000134 4011                   CMP/PZ      R0
    00000136 8B07                   BF          L342
    00000138 A00B                   BRA         L343
    0000013A C901                   AND         #1,R0
    0000013C              L346:                             
    0000013C 0080                   .DATA.W     H'0080
    0000013E 0000                   .DATA.W     0
    00000140 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000144 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000148              L342:                             
    00000148 6007                   NOT         R0,R0
    0000014A 7001                   ADD         #1,R0
    0000014C C901                   AND         #1,R0
    0000014E 6007                   NOT         R0,R0
    00000150 7001                   ADD         #1,R0
    00000152              L343:                             
    00000152 3B00                   CMP/EQ      R0,R11
    00000154 0629                   MOVT        R6
      Graphics.c    50                    Bdisp_SetPoint_VRAM(x, y, 1);
    00000156 65E3                   MOV         R14,R5
    00000158 4C0B                   JSR         @R12
    0000015A 64D3                   MOV         R13,R4
    0000015C 7E01                   ADD         #1,R14
    0000015E 3EA3                   CMP/GE      R10,R14
    00000160 8BE7                   BF          L340
    00000162 7D01                   ADD         #1,R13
    00000164 3D83                   CMP/GE      R8,R13
    00000166 8BD8                   BF          L337
      Graphics.c    51                else
      Graphics.c    52                    Bdisp_SetPoint_VRAM(x, y, 0);
      Graphics.c    53            }
      Graphics.c    54        }
      Graphics.c    55    }
    00000168 4F26                   LDS.L       @R15+,PR
    0000016A 68F6                   MOV.L       @R15+,R8
    0000016C 69F6                   MOV.L       @R15+,R9
    0000016E 6AF6                   MOV.L       @R15+,R10
    00000170 6BF6                   MOV.L       @R15+,R11
    00000172 6CF6                   MOV.L       @R15+,R12
    00000174 6DF6                   MOV.L       @R15+,R13
    00000176 000B                   RTS
    00000178 6EF6                   MOV.L       @R15+,R14



















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 15:31:46  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       55



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000017A Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000017A Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            2
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           5
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            22






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\milky\LOCALS~1\Temp\hmk58B.tmp 

